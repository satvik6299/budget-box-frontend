{"ast":null,"code":"import axios from \"axios\";\nexport const LOGIN_USER_KEY = \"BUDGET_NOTEBOOK_LOGIN_USER_KEY\";\nvar baseURL;\n// if (\n//   process.env.REACT_APP_ENVIRONMENT &&\n//   process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\"\n// ) {\n//baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {/\nbaseURL = \"https://backend-gd.herokuapp.com/\";\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\napi.interceptors.request.use(config => {\n  if (config.requireToken) {\n    const user = localStorage.getItem(LOGIN_USER_KEY) ? JSON.parse(localStorage.getItem(LOGIN_USER_KEY)) : null;\n    config.headers.common[\"Authorization\"] = user.token;\n  }\n  return config;\n}, err => console.error(err));\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  if (error.response.status === 401) {\n    localStorage.removeItem(LOGIN_USER_KEY);\n  }\n  return Promise.reject(error);\n});\nexport default class API {\n  constructor() {\n    this.signUp = async signUpBody => {\n      const formData = new FormData();\n      for (const key in signUpBody) {\n        formData.append(key, signUpBody[key]);\n      }\n      return api.post(\"/users/signup/\", formData);\n    };\n    this.signIn = async signInBody => {\n      const formData = new FormData();\n      for (const key in signInBody) {\n        formData.append(key, signInBody[key]);\n      }\n      return api.post(\"/users/signin/\", formData);\n    };\n    this.updateProfile = async (updateProfileBody, id) => {\n      const formData = new FormData();\n      for (const key in updateProfileBody) {\n        formData.append(key, updateProfileBody[key]);\n      }\n      return api.put(`/users/update/${id}/`, formData, {\n        requireToken: true\n      });\n    };\n    this.updateBudget = async (updateBudgetBody, id) => {\n      const formData = new FormData();\n      formData.append(\"budget\", updateBudgetBody);\n      return api.put(`/users/update/${id}/budget/`, formData, {\n        requireToken: true\n      });\n    };\n    // Transactions\n    this.getTransactions = query => {\n      const {\n        page\n      } = query;\n      return api.get(\"/transactions/\", {\n        params: {\n          page\n        },\n        requireToken: true\n      });\n    };\n    this.addTransactions = addTransactionBody => {\n      const formData = new FormData();\n      for (const key in addTransactionBody) {\n        formData.append(key, addTransactionBody[key]);\n      }\n      return api.post(\"/transactions/add/\", formData, {\n        requireToken: true\n      });\n    };\n    this.updateTransactions = (updateTransactionBody, id) => {\n      const formData = new FormData();\n      for (const key in updateTransactionBody) {\n        formData.append(key, updateTransactionBody[key]);\n      }\n      return api.put(`/transactions/update/${id}/`, formData, {\n        requireToken: true\n      });\n    };\n    this.deleteTransactions = id => {\n      return api.delete(`/transactions/delete/${id}/`, {\n        requireToken: true\n      });\n    };\n    this.getReportTransactions = async function () {\n      let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return api.get(\"/transactions/reports/\", {\n        params,\n        requireToken: true\n      });\n    };\n    // Categories\n    this.getCategories = () => {\n      return api.get(\"/categories/\", {\n        requireToken: true\n      });\n    };\n    this.getExpenseReport = () => {\n      return api.get(\"/transactions/expense-reports/\", {\n        requireToken: true\n      });\n    };\n    this.getLast4MonthsReport = () => {\n      return api.get(\"/transactions/reports/\", {\n        requireToken: true\n      });\n    };\n  }\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","baseURL","api","create","headers","interceptors","request","use","config","requireToken","user","localStorage","getItem","JSON","parse","common","token","err","console","error","response","data","status","removeItem","Promise","reject","API","constructor","signUp","signUpBody","formData","FormData","key","append","post","signIn","signInBody","updateProfile","updateProfileBody","id","put","updateBudget","updateBudgetBody","getTransactions","query","page","get","params","addTransactions","addTransactionBody","updateTransactions","updateTransactionBody","deleteTransactions","delete","getReportTransactions","arguments","length","undefined","getCategories","getExpenseReport","getLast4MonthsReport"],"sources":["/Users/techi.s./Downloads/Budget-Box-main/frontend/src/API.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const LOGIN_USER_KEY = \"BUDGET_NOTEBOOK_LOGIN_USER_KEY\";\n\nvar baseURL;\n// if (\n//   process.env.REACT_APP_ENVIRONMENT &&\n//   process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\"\n// ) {\n//baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {/\nbaseURL = \"https://backend-gd.herokuapp.com/\";\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    if (config.requireToken) {\n      const user = localStorage.getItem(LOGIN_USER_KEY)\n        ? JSON.parse(localStorage.getItem(LOGIN_USER_KEY))\n        : null;\n      config.headers.common[\"Authorization\"] = user.token;\n    }\n\n    return config;\n  },\n  (err) => console.error(err)\n);\n\napi.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    if (error.response.status === 401) {\n      localStorage.removeItem(LOGIN_USER_KEY);\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default class API {\n  signUp = async (signUpBody) => {\n    const formData = new FormData();\n\n    for (const key in signUpBody) {\n      formData.append(key, signUpBody[key]);\n    }\n\n    return api.post(\"/users/signup/\", formData);\n  };\n\n  signIn = async (signInBody) => {\n    const formData = new FormData();\n    for (const key in signInBody) {\n      formData.append(key, signInBody[key]);\n    }\n    return api.post(\"/users/signin/\", formData);\n  };\n\n  updateProfile = async (updateProfileBody, id) => {\n    const formData = new FormData();\n    for (const key in updateProfileBody) {\n      formData.append(key, updateProfileBody[key]);\n    }\n    return api.put(`/users/update/${id}/`, formData, { requireToken: true });\n  };\n\n  updateBudget = async (updateBudgetBody, id) => {\n    const formData = new FormData();\n    formData.append(\"budget\", updateBudgetBody);\n    return api.put(`/users/update/${id}/budget/`, formData, {\n      requireToken: true,\n    });\n  };\n\n  // Transactions\n  getTransactions = (query) => {\n    const { page } = query;\n    return api.get(\"/transactions/\", {\n      params: { page },\n      requireToken: true,\n    });\n  };\n\n  addTransactions = (addTransactionBody) => {\n    const formData = new FormData();\n\n    for (const key in addTransactionBody) {\n      formData.append(key, addTransactionBody[key]);\n    }\n\n    return api.post(\"/transactions/add/\", formData, { requireToken: true });\n  };\n\n  updateTransactions = (updateTransactionBody, id) => {\n    const formData = new FormData();\n\n    for (const key in updateTransactionBody) {\n      formData.append(key, updateTransactionBody[key]);\n    }\n\n    return api.put(`/transactions/update/${id}/`, formData, {\n      requireToken: true,\n    });\n  };\n\n  deleteTransactions = (id) => {\n    return api.delete(`/transactions/delete/${id}/`, { requireToken: true });\n  };\n\n  getReportTransactions = async (params = {}) => {\n    return api.get(\"/transactions/reports/\", {\n      params,\n      requireToken: true,\n    });\n  };\n\n  // Categories\n  getCategories = () => {\n    return api.get(\"/categories/\", {\n      requireToken: true,\n    });\n  };\n\n  getExpenseReport = () => {\n    return api.get(\"/transactions/expense-reports/\", {\n      requireToken: true,\n    });\n  };\n\n  getLast4MonthsReport = () => {\n    return api.get(\"/transactions/reports/\", {\n      requireToken: true,\n    });\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}